name: Build and Push Image

on:
  push:
    branches: [ main ]
    paths:
      - "VERSION"
  workflow_dispatch:

permissions:
  contents: write
  packages: write

concurrency:
  group: image-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/unraid_template_manager

jobs:
  run-ci:
    name: Run CI Checks
    uses: ./.github/workflows/validate-code.yml

  build-and-push:
    name: Build and Push
    needs: run-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read VERSION file
        id: get_version
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION | tr -d '\n' | tr -d '\r')
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          else
            echo "version=" >> $GITHUB_OUTPUT
          fi

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=raw,value=${{ steps.get_version.outputs.version }},enable=${{ steps.get_version.outputs.version != '' }}
            type=sha

      - name: Create or update GitHub Release for version
        if: ${{ steps.get_version.outputs.version != '' }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_version.outputs.version }}
          commit: ${{ github.sha }}
          name: ${{ steps.get_version.outputs.version }}
          generateReleaseNotes: true
          allowUpdates: true
          makeLatest: true

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          sbom: false